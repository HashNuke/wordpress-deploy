# We install tmux as a bonus to tinker with the server later if required
# Feel free to do your theme development and other such work on this tmux session :)
#
- name: Install some basic packages for further installation
  apt:
    pkg:
      - apt-transport-https
      - curl
      - ca-certificates
      - tmux
    state: present

# Reference: https://www.jeffgeerling.com/blog/2022/aptkey-deprecated-debianubuntu-how-fix-ansible
- name: Add MariaDB apt repository key
  ansible.builtin.get_url:
    url: "https://mariadb.org/mariadb_release_signing_key.asc"
    dest: /etc/apt/trusted.gpg.d/mariadb.asc
    mode: '0644'
    # force: true

# sudo add-apt-repository 'deb [arch=amd64,arm64] http://mariadb.mirror.globo.tech/repo/10.10.2/ubuntu/ focal main'
- name: Add MariaDB repo
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64,arm64] http://deb.mariadb.org/{{mariadb_version}}/ubuntu {{ansible_facts['lsb']['codename']}} main"
    state: present

- name: Add nginx apt repository key
  ansible.builtin.get_url:
    url: "https://nginx.org/keys/nginx_signing.key"
    dest: /etc/apt/trusted.gpg.d/nginx.key
    mode: '0644'

# http://nginx.org/en/linux_packages.html#Ubuntu
- name: "Add nginx repo"
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/trusted.gpg.d/nginx.key] http://nginx.org/packages/mainline/ubuntu {{ansible_facts['lsb']['codename']}} nginx"
    state: present
    filename: "nginx"

# https://launchpad.net/~ondrej/+archive/ubuntu/php
- name: "Add php repo"
  ansible.builtin.apt_repository:
    repo: "ppa:ondrej/php"
    state: present

- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

- name: Update apt package cache and install packages
  apt:
    pkg:
      - "nginx-full"
      - "ghostscript"
      - "php{{ php_version }}"
      - "php{{ php_version }}-fpm"
      - "php{{ php_version }}-common"
      - "php{{ php_version }}-curl"
      - "php{{ php_version }}-imagick"
      - "php{{ php_version }}-zip"
      - "php{{ php_version }}-mbstring"
      - "php{{ php_version }}-xml"
      - "php{{ php_version }}-bcmath"
      - "php{{ php_version }}-intl"
      - "php{{ php_version }}-xsl"
      - "php{{ php_version }}-mysql"
      - "mariadb-server"
      - "postfix"
      - "mailutils"
      - "certbot"
      - "python3-certbot-nginx"
    update_cache: yes
    state: present

- name: "Disable nginx sample config"
  file:
    name: "/etc/nginx/sites-enabled/default"
    state: "absent"

- name: Download wp cli
  get_url:
    url: "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
    dest: "/usr/local/bin/wp"
    mode: "755"

- name: Create a deployers user group
  group:
    name: deployers
    state: present

- name: Create deployer user
  user:
    name: deployer
    groups: deployers,www-data
    state: present

- name: Create ssh dir for deploy user
  file:
    path: "/home/{{ deploy_user }}/.ssh"
    state: directory
    recurse: true
    owner: "{{ deploy_user }}"
    mode: "700"
  tags: ['ssh-setup']

- name: "Copy default user authorized_keys to deploy user"
  ansible.builtin.copy:
    src: "{{ (default_user == 'root') | ternary('/root', '/home/'+deploy_user) }}/.ssh/authorized_keys"
    dest: "/home/{{ deploy_user }}/.ssh/authorized_keys"
    remote_src: yes
    owner: "{{ deploy_user }}"
    mode: "700"
  register: default_user_user_authorized_keys
  tags: ['ssh-setup']
