- name: "Setup wordpress"
  hosts: "all"
  remote_user: "{{ default_user }}"

  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      become: "{{ requires_become }}"

    - name: Restart postfix
      ansible.builtin.service:
        name: postfix
        state: restarted
      become: "{{ requires_become }}"

    - name: Restart phpfpm
      ansible.builtin.service:
        name: "php{{ php_version }}-fpm"
        state: restarted
      become: "{{ requires_become }}"

  tasks:
    # Abstracting out versions for updating this later.
    # default_user is not a documented variable. But you could use this to change the name of the deployer user.
    - name: Set versions and other defaults
      ansible.builtin.set_fact:
        requires_become: "{{ (default_user == 'root') | ternary('no', 'yes') }}"
        deploy_user: "{{ deploy_user | default('deployer') }}"
        php_version: "{{ php_version | default('8.1') }}"
        mariadb_version: "{{ mariadb_version | default('10.11') }}"
        wordpress_deploy_path: "/home/{{ deploy_user | default('deployer') }}/wordpress-deploy"
        site_path: "/home/{{ deploy_user | default('deployer') }}/sites/{{ site_name }}"
        site_config_path: "/home/{{ deploy_user | default('deployer') }}/sites/{{ site_name }}/config"
        site_content_path: "/home/{{ deploy_user | default('deployer') }}/sites/{{ site_name }}/content"
        site_backups_path: "/home/{{ deploy_user | default('deployer') }}/sites/{{ site_name }}/backups"
        nginx_proxy_cache_path: "/var/run/nginx-cache"
      tags:
        - "wp-install"
        - "wp-plugins"
        - "install-scripts"
        - "postfix"
        - "ssh-setup"

    - include_tasks:
        file: "tasks/server-base.yml"
        apply:
          become: "{{ requires_become }}"
      tags: ['ssh-setup']

    - name: Configure ufw firewall
      include_tasks:
        file: "tasks/ufw.yml"
        apply:
          become: "{{ requires_become }}"

    - name: Configure postfix
      include_tasks:
        file: "tasks/postfix.yml"
        apply:
          become: "{{ requires_become }}"
      tags: ['postfix']

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        owner: "www-data"
        group: www-data
      loop:
        - "{{ wordpress_deploy_path }}"
        - "{{ site_backups_path }}"
        - "{{ site_config_path }}"
        - "{{ site_content_path }}"

    - include_tasks:
        file: "tasks/db-setup.yml"

    - include_tasks:
        file: "tasks/install-wordpress.yml"
        apply:
          become: yes
          become_user: "{{ deploy_user }}"
      tags: ["wp-install"]

    - name: "Add nginx config for site"
      ansible.builtin.template:
        src: "templates/site.nginx-conf.j2"
        dest: "/etc/nginx/sites-enabled/{{ site_name }}"
      become: "{{ requires_become }}"
      notify:
        - Restart nginx
      tags: ["install-scripts"]

    - include_tasks:
        file: "tasks/nginx-setup.yml"

    - include_tasks:
        file: "tasks/site-backups.yml"
        apply:
          become: yes
          become_user: "{{ deploy_user }}"
      tags: ["install-scripts"]

    - name: Install akismet plugin
      include_tasks:
        file: "tasks/install-plugin.yml"
        apply:
          become: yes
          become_user: "{{ deploy_user }}"
      vars:
        plugin_name: "akismet"
      tags: ["wp-plugins"]

    - name: Install wp-super-cache plugin
      include_tasks:
        file: "tasks/install-plugin.yml"
        apply:
          become: yes
          become_user: "{{ deploy_user }}"
      vars:
        plugin_name: "wp-super-cache"
      tags: ["wp-plugins"]

    - include_tasks:
        file: "tasks/post-install-mail.yml"
        apply:
          become: yes
          become_user: "{{ deploy_user }}"
      tags: ["install-scripts"]

    # From Plausible.io docs. https://plausible.io/docs/proxy/guides/nginx
    # Not sure why /run is used instead of /var/run
    # But atleast on Ubuntu 22.04, both seem to be the same directories.
    #
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: "/usr/lib/tmpfiles.d/nginx-cache.conf"
        line: "D /run/nginx-cache 0755 root root -"
        create: yes
      notify:
        - Restart nginx
